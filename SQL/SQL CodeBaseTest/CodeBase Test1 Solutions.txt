--QUESTION1: Write a query to fetch the details of the books written by author whose name ends with er.
         -- : Display the Title ,Author and ReviewerName for all the books from the above table
create table Books (
    id int primary key,
    title varchar(255),
    author varchar(255),
    isbn varchar(13) unique,
    published_date datetime
)
--value insert
insert into Books (id,title, author, isbn, published_date)
values (1,'My first SQL book', 'Mary Parker', '981483029127', convert(datetime, '2012-02-22 12:08:17', 120));
insert into Books (id,title, author, isbn, published_date)
values (2,'My Second SQL book','John Mayer','857300923713',convert (datetime,'1972-07-03 09:22:45',120)),
	   (3,'My Third SQL book','Cary Flint','523120967812',convert (datetime,'2015-10-18 14:05:44',120))
--display table columns.
	   select * from Books
 --create second table:
	   create table reviews (
    id int primary key,
    book_id int,
    reviewer_name varchar(255),
    content varchar(255),
    rating int,
    published_date datetime
);
--insert values:
insert into reviews (id, book_id, reviewer_name, content, rating, published_date)
values (1, 1, 'John Smith','My first review', 4,convert(datetime,'2017-12-10 05:50:11',120))
insert into reviews (id, book_id, reviewer_name, content, rating, published_date)
values (2, 2, 'John Smith', 'My Second review', 5,convert(datetime,'2017-10-13 15:05:12',120)),
		(3, 3, 'Alice Walker','Another review', 1,convert(datetime,'2017-10-22 23:47:10',120))

 --Write a query to fetch the details of the books written by author whose name ends with er
select b.title, b.author, r.reviewer_name
from Books as b
join reviews as r on b.id = r.book_id
where b.author like '%er';
--Display the Title ,Author and ReviewerName for all the books from the above table
select b.title, b.author, r.reviewer_name
from Books as b
left join reviews as r on b.id = r.book_id;

--Question 2 Display the reviewer name who reviewed more than one book.
CREATE TABLE Books1 (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    isbn VARCHAR(13) UNIQUE,
    published_date datetime
);
-- Inserting data into the Book table
INSERT INTO Books1 (id, title, author, isbn, published_date)
VALUES
    (1, 'My First SQL Book', 'Mary Parker', '9788395092413', '1925-04-10 00:00:00'),
    (2, 'My Second SQL Book', 'John Mayer', '9789412384002', '1960-07-11 20:00:00'),
    (3, 'My Third SQL Book', 'Cary Flint', '9788395092514', '1960-07-11 21:00:00');
CREATE TABLE Reviewss (
    id INT PRIMARY KEY,
    book_id INT,
    reviewer_name VARCHAR(255),
    content TEXT,
    rating DECIMAL(3, 2),
    published_date datetime,
    FOREIGN KEY (id) REFERENCES Books1(id)
);
INSERT INTO Reviewss (id, book_id, reviewer_name, content, rating, published_date)
VALUES
    (1, 1, 'John Smith', 'My first review', 4.0, '2023-10-09 08:15:00'),
    (2, 2, 'John Smith', 'My Second review', 5.0, '2023-10-10 14:30:00'),
    (3, 2, 'Alice Walker', ' My Third review', 2.0, '2023-10-11 17:45:00');
SELECT reviewer_name
FROM Reviewss
GROUP BY reviewer_name
HAVING COUNT(book_id) > 1;


-- Question 3 Create the Customer table
CREATE TABLE Customers (
   ID INT,
   NAME VARCHAR(255),
   AGE INT,
   ADDRESS VARCHAR(255),
   SALARY DECIMAL(10, 2)
);
-- Insert data into the Employee table
INSERT INTO Customers(ID, NAME, AGE, ADDRESS, SALARY)
VALUES
(1, 'Ramesh', 32, 'Ahmedabad', 2000.00),
(2, 'Khilan', 25, 'Mumbai', 1500.00),
(3, 'Kaushik', 25, 'Delhi', NULL),
(4, 'Chaitali', 23, 'Mumbai', 2000.00),
(5, 'Hardik', 27, 'Bhopal', 6500.00),
(6, 'Komal', 22, 'MP', 8500.00)
SELECT Name
FROM Customers
WHERE Address LIKE '%o%';


--Question 4 Write a query to display the Date,Total no of customer placed order on same Date
create table customers1
(ID int primary key,
Name varchar(255),
Age int,
Address varchar(255),
Salary float)
--insert values to customers
insert into customers1 values
(1,'Ramesh',32,'Ahmedabad',2000.00),
(2,'Khilan',25,'Delhi',1500.00),
(3,'Kaushik',23,'Kota',2000.00),
(4,'Chaitali',25,'Mumbai',6500.00),
(5,'Hardik',27,'Bhopal',8500.00),
(6,'Komal',22,'MP',4500.00),
(7,'Muffy',24,'Indore',10000.00)
--show
select * from customers1
--create table orders
create table orders
(Order_ID int,
Date Datetime,
Customer_ID int references customers1(id),
Amount float)
--insert values to orders
insert into orders values
(102,'2009-10-08',3,3000),
(100,'2009-10-08',3,1500),
(101,'2009-11-20',2,1560),
(103,'2008-05-20',4,2060)
select * from orders 
select date, count(distinct customer_id) as total_customers
from orders
group by date
order by date;


--question 5: Display the Names of the Employee in lower case, whose salary is null
        --: Write a sql server query to display the Gender,Total no of male and female from the above relation

-- Create the Employee table
CREATE TABLE Employee (
    ID INT,
    NAME VARCHAR(255),
    AGE INT,
    ADDRESS VARCHAR(255),
    SALARY DECIMAL(10, 2)
);
-- Insert data into the Employee table
INSERT INTO Employee(ID, NAME, AGE, ADDRESS, SALARY)
VALUES
(1, 'Ramesh', 32, 'Ahmedabad', 2000.00),
(2, 'Khilan', 25, 'Mumbai', 1500.00),
(3, 'Kaushik', 25, 'Delhi', NULL),
(4, 'Chaitali', 23, 'Mumbai', 2000.00),
(5, 'Hardik', 27, 'Bhopal', 6500.00),
(6, 'Komal', 22, 'MP', 8500.00),
(7, 'Muffy', 24, 'Indore', NULL);
-- Query to display names of employees in lowercase with null salary
SELECT LOWER(NAME) FROM Employee WHERE SALARY IS NULL;

--question 5: Write a sql server query to display the Gender,Total no of male and female from the above relation
-- Create the StudentDetails table
CREATE TABLE StudentDetailsS (
    RegisterNo INT,
    Name VARCHAR(255),
    Age INT,
    Qualification VARCHAR(50),
    MobileNo VARCHAR(15),
    Mail_id VARCHAR(50),
    Location VARCHAR(50),
    Gen CHAR(2)
);
-- Insert data into the StudentDetails table
INSERT INTO StudentDetailsS (RegisterNo, Name, Age, Qualification, MobileNo, Mail_id, Location, Gen)
VALUES
(2, 'Sai', 22, 'B.E', 9952836777, 'Sai@gmail.com', 'Chennai', 'M'),
(3, 'Kumar',20, 'BSC', 7890125648, 'Kumar@gmail.com', 'Madurai', 'M'),
(4, 'Selvi', 22, 'B.Tech', 8904567342, 'selvi@gmail.com', 'Selam', 'F'),
(5, 'Nisha', 25, 'M.E', 7834672310, 'Nisha@gmail.com', 'Theni', 'F'),
(6, 'SaiSaran',21, 'B.A', 7890345678, 'saran@gmail.com','Madurai', 'F'),
(7, 'Tom', 23, 'BCA', 8901234675, 'Tom@gmail.com', 'Pune', 'M');

-- Query to display gender and total number of males and females
SELECT 
    Gen AS Gender,
    COUNT(*) AS Total
FROM 
    StudentDetailsS
WHERE 
    Gen IS NOT NULL
GROUP BY 
Gen;